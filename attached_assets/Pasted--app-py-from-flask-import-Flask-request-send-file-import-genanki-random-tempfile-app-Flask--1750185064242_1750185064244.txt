# app.py
from flask import Flask, request, send_file
import genanki, random, tempfile

app = Flask(__name__)

# One deck & model IDs (you can hard-code or randomize once)
DECK_ID        = random.randrange(1<<30, 1<<31)
BASIC_MODEL_ID = random.randrange(1<<30, 1<<31)
CLOZE_MODEL_ID = random.randrange(1<<30, 1<<31)

# Basic card model
basic_model = genanki.Model(
  BASIC_MODEL_ID,
  'HighYieldBasicModel',
  fields=[{'name':'Front'},{'name':'Back'}],
  templates=[{
    'name':'Card 1',
    'qfmt':'{{Front}}',
    'afmt':'<div>{{Back}}</div>',
  }],
  css='''
    .high-yield { color: #c00; font-weight: bold; }
    .card { font-family: Arial; font-size: 18px; }
  '''
)

# Cloze card model
cloze_model = genanki.ClozeModel(
  CLOZE_MODEL_ID,
  'HighYieldClozeModel',
  css='''
    .cloze { color: #06c; font-weight: bold; }
    .card { font-family: Arial; font-size: 18px; }
  ''',
  extra_fields=[{'name':'Note'}]
)

@app.route('/generate', methods=['POST'])
def generate_apkg():
    payload = request.get_json()
    cards   = payload.get('cards', [])
    deck    = genanki.Deck(DECK_ID, 'High-Yield Flashcards')

    for c in cards:
        if c.get('type') == 'cloze':
            note = genanki.ClozeNote(
              model=cloze_model,
              fields=[c['front'], c.get('note','')]
            )
        else:
            back = (c.get('back','').replace('\n','<br>'))
            # Example: highlight ANY ALL-CAPS term
            back = re.sub(r'\b([A-Z]{4,})\b',
                          r'<span class="high-yield">\1</span>',
                          back)
            note = genanki.Note(
              model=basic_model,
              fields=[c['front'], back]
            )
        deck.add_note(note)

    tmp = tempfile.NamedTemporaryFile(delete=False, suffix='.apkg')
    genanki.Package(deck).write_to_file(tmp.name)
    tmp.close()

    return send_file(tmp.name,
                     as_attachment=True,
                     download_name='flashcards.apkg',
                     mimetype='application/octet-stream')

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=3000)
